services:
  zookeeper:
    image: bitnami/zookeeper:latest
    ports:
      - "2181:2181"
    environment:
      ZOO_MY_ID: 1
      ZOO_PORT: 2181
      ZOO_SERVERS: server.1=zookeeper:2888:3888
      ALLOW_ANONYMOUS_LOGIN: "yes"
    volumes:
      - zookeeper-data:/data
      - zookeeper-datalog:/datalog
    networks:
      - app-network

  kafka:
    image: bitnami/kafka:3.7
    ports:
      - "9092:9092"
    environment:
      KAFKA_CFG_NODE_ID: 1
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka:29092,EXTERNAL://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"
      KAFKA_BROKER_ID: 1
      KAFKA_LOG4J_LOGGERS: "kafka.controller=INFO,kafka.producer.async.DefaultEventHandler=INFO,state.change.logger=INFO"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_CFG_ZOOKEEPER_CONNECT: zookeeper:2181
      ALLOW_PLAINTEXT_LISTENER: "yes"
      KAFKA_LISTENERS: "INTERNAL://:29092,EXTERNAL://:9092"
      KAFKA_ZOOKEEPER_SESSION_TIMEOUT: "6000"
      KAFKA_RESTART_ATTEMPTS: "10"
      KAFKA_RESTART_DELAY: "5"
      ZOOKEEPER_AUTOPURGE_PURGE_INTERVAL: "0"
    volumes:
      - kafka-data:/bitnami/kafka
      - "./build/kafka/run-init-topics.sh:/docker-entrypoint-initdb.d/run-init-kafka-topics.sh:ro"
      - "./build/kafka/init-topics.sh:/init-kafka-topics.sh:ro"
    depends_on:
      - zookeeper
    networks:
      - app-network

  postgres:
    image: postgres:15
    ports:
      - "5432:5432"
    env_file:
      - .env
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - app-network

  l0_task_app:
    build:
      context: .
      dockerfile: build/web_app/Dockerfile
    ports:
      - "8080:8080"
    env_file:
      - .env
    depends_on:
      - kafka
      - postgres
    networks:
      - app-network

  l0_kafka_loader:
    build:
      context: .
      dockerfile: build/kafka_loader/Dockerfile
    env_file:
      - .env
    depends_on:
      - kafka
      - postgres
    networks:
      - app-network

volumes:
  postgres-data:
  kafka-data:
  zookeeper-data:
  zookeeper-datalog:

networks:
  app-network:
    driver: bridge
